on load:
	execute console command "/ultrashop yenile"

function placeholder(text: text, amount: text, name: text, price: text) :: texts:
	replace all "{esyamiktari}" with {_amount} in {_text}
	replace all "{materyal}" with {_name} in {_text}
	replace all "{esyafiyati}" with {_price} in {_text}
	return {_text}

command /ultrashop [<text>]:
	aliases: us, shop, market
	trigger:
		if arg-1 is not set:
			usKategoriler(player, "US-I", "market.kategoriler", yaml value "market.genişlik" from "US-I", yaml value "market.isim" from "US-I")
		else if arg-1 is "yardım":
			send "%join colored yaml list ""yardım.mesaj"" from ""US-M"" with nl% " to executor
		else if arg-1 is "yenile":
			if executor has permission "us.yenile":
				set {_ms} to current system milliseconds
				send "&8[&9UltraShop&8] &eUltraShop yenileniyor..." to executor
				if dir "plugins/UltraShop/" doesn't exist:
					create dir "plugins/UltraShop/mesajlar.yml"
					create dir "plugins/UltraShop/eşyalar.yml"
					set file contents of "plugins/UltraShop/eşyalar.yml" to contents from url "https://raw.githubusercontent.com/pixache/ultrashop/master/esyalar.yml"
					set file contents of "plugins/UltraShop/mesajlar.yml" to contents from url "https://raw.githubusercontent.com/pixache/ultrashop/master/mesajlar.yml"
				load yaml "plugins/UltraShop/eşyalar.yml" as "US-I"
				load yaml "plugins/UltraShop/mesajlar.yml" as "US-M"
				save yaml "US-I"
				save yaml "US-M"
				send "&8[&9UltraShop&8] &eYenileme tamamlandı. (%difference between current system milliseconds and {_ms}%ms)"
			else if executor doesn't have permission "us.reload":
				send "%yaml value ""yetki-yok"" from ""US-M""%" to executor

function usKategoriler(p: player, yaml: text, node: text, size: text, name: text):
	open virtual chest with size {_size} named {_name} to {_p}
	loop yaml node keys {_node} from {_yaml}:
		set {_GUI::value} to loop-value
		set {_GUI::kategori::name} to yaml value "%{_node}%.%{_GUI::value}%.isim" from {_yaml}
		set {_GUI::kategori::size} to yaml value "%{_node}%.%{_GUI::value}%.genişlik" from {_yaml}
		set {_GUI::kategori::item} to yaml value "%{_node}%.%{_GUI::value}%.eşya" from {_yaml} parsed as item
		set {_GUI::kategori::slot} to yaml value "%{_node}%.%{_GUI::value}%.slot" from {_yaml}
		make gui slot {_GUI::kategori::slot} of {_p} with {_GUI::kategori::item} named {_GUI::kategori::name} to run function usMarket({_p}, "US-I", "%{_node}%.%{_GUI::value}%.eşyalar", {_GUI::kategori::size}, "%{_GUI::kategori::name}%")

function usMarket(p: player, yaml: text, node: text, size: object, name: object):
	open virtual chest with size {_size} named {_name} to {_p}
	loop yaml node keys {_node} from {_yaml}:
		set {_GUI::market::isim} to yaml value "%{_node}%.%loop-value%.isim" from {_yaml}
		set {_GUI::market::eşya} to yaml value "%{_node}%.%loop-value%.eşya" from {_yaml} parsed as item
		set {_GUI::market::miktar} to yaml value "%{_node}%.%loop-value%.miktar" from {_yaml}
		set {_GUI::market::fiyat} to yaml value "%{_node}%.%loop-value%.fiyat" from {_yaml}
		set {_GUI::market::slot} to yaml value "%{_node}%.%loop-value%.slot" from {_yaml}
		make gui slot {_GUI::market::slot} of {_p} with {_GUI::market::eşya} named {_GUI::market::isim} with lore (placeholder("%colored yaml list ""gelişmiş.açıklama"" from {_yaml}%", "%{_GUI::market::miktar}%", "%{_GUI::market::eşya}%", "%{_GUI::market::fiyat}%")) to run:
			if {_p}'s balance >= {_GUI::market::fiyat}:
				give {_GUI::market::miktar} of {_GUI::market::eşya} named {_GUI::market::isim} to {_p}
				remove {_GUI::market::fiyat} from {_p}'s balance
				send (placeholder("%yaml value ""satın-alındı"" from ""US-M""%", "%{_GUI::market::miktar}%", "%{_GUI::market::isim}%", "%{_GUI::market::fiyat}%")) to {_p}
			else:
				send "%yaml value ""para-yok"" from ""US-M""%" to {_p}
